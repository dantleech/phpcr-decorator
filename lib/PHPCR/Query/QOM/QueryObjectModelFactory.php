<?php

// autogenerated: Wed, 10 Sep 2014 18:08:53 +0200

namespace Sulu\Component\PhpcrDecorator\PHPCR\Query\QOM;


class QueryObjectModelFactory implements \PHPCR\Query\QOM\QueryObjectModelFactoryInterface
{
    protected $component;
    protected $decoratorFactory;

    public function __construct(
        \PHPCR\Query\QOM\QueryObjectModelFactoryInterface $component,
        \Sulu\Component\PhpcrDecorator\DecoratorFactoryInterface $decoratorFactory
    )
    {
        $this->component = $component;
        $this->decoratorFactory = $decoratorFactory;
    }

    /**
     * {@inheritDoc}
     */
    public function createQuery(\PHPCR\Query\QOM\SourceInterface$source, \PHPCR\Query\QOM\ConstraintInterface$constraint = NULL, array $orderings = array (
), array $columns = array (
))
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->createQuery($source, $constraint, $orderings, $columns));
    }

    /**
     * {@inheritDoc}
     */
    public function selector($selectorName, $nodeTypeName)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->selector($selectorName, $nodeTypeName));
    }

    /**
     * {@inheritDoc}
     */
    public function join(\PHPCR\Query\QOM\SourceInterface$left, \PHPCR\Query\QOM\SourceInterface$right, $joinType, \PHPCR\Query\QOM\JoinConditionInterface$joinCondition)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->join($left, $right, $joinType, $joinCondition));
    }

    /**
     * {@inheritDoc}
     */
    public function equiJoinCondition($selector1Name, $property1Name, $selector2Name, $property2Name)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->equiJoinCondition($selector1Name, $property1Name, $selector2Name, $property2Name));
    }

    /**
     * {@inheritDoc}
     */
    public function sameNodeJoinCondition($selector1Name, $selector2Name, $selector2Path = NULL)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->sameNodeJoinCondition($selector1Name, $selector2Name, $selector2Path));
    }

    /**
     * {@inheritDoc}
     */
    public function childNodeJoinCondition($childSelectorName, $parentSelectorName)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->childNodeJoinCondition($childSelectorName, $parentSelectorName));
    }

    /**
     * {@inheritDoc}
     */
    public function descendantNodeJoinCondition($descendantSelectorName, $ancestorSelectorName)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->descendantNodeJoinCondition($descendantSelectorName, $ancestorSelectorName));
    }

    /**
     * {@inheritDoc}
     */
    public function andConstraint(\PHPCR\Query\QOM\ConstraintInterface$constraint1, \PHPCR\Query\QOM\ConstraintInterface$constraint2)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->andConstraint($constraint1, $constraint2));
    }

    /**
     * {@inheritDoc}
     */
    public function orConstraint(\PHPCR\Query\QOM\ConstraintInterface$constraint1, \PHPCR\Query\QOM\ConstraintInterface$constraint2)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->orConstraint($constraint1, $constraint2));
    }

    /**
     * {@inheritDoc}
     */
    public function notConstraint(\PHPCR\Query\QOM\ConstraintInterface$constraint)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->notConstraint($constraint));
    }

    /**
     * {@inheritDoc}
     */
    public function comparison(\PHPCR\Query\QOM\DynamicOperandInterface$operand1, $operator, \PHPCR\Query\QOM\StaticOperandInterface$operand2)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->comparison($operand1, $operator, $operand2));
    }

    /**
     * {@inheritDoc}
     */
    public function propertyExistence($selectorName, $propertyName)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->propertyExistence($selectorName, $propertyName));
    }

    /**
     * {@inheritDoc}
     */
    public function fullTextSearch($selectorName, $propertyName, $fullTextSearchExpression)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->fullTextSearch($selectorName, $propertyName, $fullTextSearchExpression));
    }

    /**
     * {@inheritDoc}
     */
    public function sameNode($selectorName, $path)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->sameNode($selectorName, $path));
    }

    /**
     * {@inheritDoc}
     */
    public function childNode($selectorName, $path)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->childNode($selectorName, $path));
    }

    /**
     * {@inheritDoc}
     */
    public function descendantNode($selectorName, $path)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->descendantNode($selectorName, $path));
    }

    /**
     * {@inheritDoc}
     */
    public function propertyValue($selectorName, $propertyName)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->propertyValue($selectorName, $propertyName));
    }

    /**
     * {@inheritDoc}
     */
    public function length(\PHPCR\Query\QOM\PropertyValueInterface$propertyValue)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->length($propertyValue));
    }

    /**
     * {@inheritDoc}
     */
    public function nodeName($selectorName)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->nodeName($selectorName));
    }

    /**
     * {@inheritDoc}
     */
    public function nodeLocalName($selectorName)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->nodeLocalName($selectorName));
    }

    /**
     * {@inheritDoc}
     */
    public function fullTextSearchScore($selectorName)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->fullTextSearchScore($selectorName));
    }

    /**
     * {@inheritDoc}
     */
    public function lowerCase(\PHPCR\Query\QOM\DynamicOperandInterface$operand)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->lowerCase($operand));
    }

    /**
     * {@inheritDoc}
     */
    public function upperCase(\PHPCR\Query\QOM\DynamicOperandInterface$operand)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->upperCase($operand));
    }

    /**
     * {@inheritDoc}
     */
    public function bindVariable($bindVariableName)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->bindVariable($bindVariableName));
    }

    /**
     * {@inheritDoc}
     */
    public function literal($literalValue)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->literal($literalValue));
    }

    /**
     * {@inheritDoc}
     */
    public function ascending(\PHPCR\Query\QOM\DynamicOperandInterface$operand)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->ascending($operand));
    }

    /**
     * {@inheritDoc}
     */
    public function descending(\PHPCR\Query\QOM\DynamicOperandInterface$operand)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->descending($operand));
    }

    /**
     * {@inheritDoc}
     */
    public function column($selectorName, $propertyName = NULL, $columnName = NULL)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->column($selectorName, $propertyName, $columnName));
    }

}