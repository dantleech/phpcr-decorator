<?php

// autogenerated: Wed, 10 Sep 2014 18:08:53 +0200

namespace Sulu\Component\PhpcrDecorator\PHPCR\NodeType;


class NodeType implements \PHPCR\NodeType\NodeTypeInterface
{
    protected $component;
    protected $decoratorFactory;

    public function __construct(
        \PHPCR\NodeType\NodeTypeInterface $component,
        \Sulu\Component\PhpcrDecorator\DecoratorFactoryInterface $decoratorFactory
    )
    {
        $this->component = $component;
        $this->decoratorFactory = $decoratorFactory;
    }

    /**
     * {@inheritDoc}
     */
    public function getSupertypes()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getSupertypes());
    }

    /**
     * {@inheritDoc}
     */
    public function getSupertypeNames()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getSupertypeNames());
    }

    /**
     * {@inheritDoc}
     */
    public function getDeclaredSupertypes()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getDeclaredSupertypes());
    }

    /**
     * {@inheritDoc}
     */
    public function getSubtypes()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getSubtypes());
    }

    /**
     * {@inheritDoc}
     */
    public function getDeclaredSubtypes()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getDeclaredSubtypes());
    }

    /**
     * {@inheritDoc}
     */
    public function isNodeType($nodeTypeName)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->isNodeType($nodeTypeName));
    }

    /**
     * {@inheritDoc}
     */
    public function getPropertyDefinitions()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getPropertyDefinitions());
    }

    /**
     * {@inheritDoc}
     */
    public function getChildNodeDefinitions()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getChildNodeDefinitions());
    }

    /**
     * {@inheritDoc}
     */
    public function canSetProperty($propertyName, $value)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->canSetProperty($propertyName, $value));
    }

    /**
     * {@inheritDoc}
     */
    public function canAddChildNode($childNodeName, $nodeTypeName = NULL)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->canAddChildNode($childNodeName, $nodeTypeName));
    }

    /**
     * {@inheritDoc}
     */
    public function canRemoveNode($nodeName)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->canRemoveNode($nodeName));
    }

    /**
     * {@inheritDoc}
     */
    public function canRemoveProperty($propertyName)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->canRemoveProperty($propertyName));
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getName());
    }

    /**
     * {@inheritDoc}
     */
    public function getDeclaredSupertypeNames()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getDeclaredSupertypeNames());
    }

    /**
     * {@inheritDoc}
     */
    public function isAbstract()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->isAbstract());
    }

    /**
     * {@inheritDoc}
     */
    public function isMixin()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->isMixin());
    }

    /**
     * {@inheritDoc}
     */
    public function hasOrderableChildNodes()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->hasOrderableChildNodes());
    }

    /**
     * {@inheritDoc}
     */
    public function isQueryable()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->isQueryable());
    }

    /**
     * {@inheritDoc}
     */
    public function getPrimaryItemName()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getPrimaryItemName());
    }

    /**
     * {@inheritDoc}
     */
    public function getDeclaredPropertyDefinitions()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getDeclaredPropertyDefinitions());
    }

    /**
     * {@inheritDoc}
     */
    public function getDeclaredChildNodeDefinitions()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getDeclaredChildNodeDefinitions());
    }

}