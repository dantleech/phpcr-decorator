<?php

// autogenerated: Wed, 10 Sep 2014 09:56:22 +0200

namespace Sulu\Component\PhpcrDecorator\PHPCR\NodeType

class NodeTypeManager implements \PHPCR\NodeType\NodeTypeManagerInterface
{
    /**
     * {@inheritDoc}
     */
    public function getNodeType($nodeTypeName)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getNodeType($nodeTypeName))
    }

    /**
     * {@inheritDoc}
     */
    public function hasNodeType($name)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->hasNodeType($name))
    }

    /**
     * {@inheritDoc}
     */
    public function getAllNodeTypes()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getAllNodeTypes())
    }

    /**
     * {@inheritDoc}
     */
    public function getPrimaryNodeTypes()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getPrimaryNodeTypes())
    }

    /**
     * {@inheritDoc}
     */
    public function getMixinNodeTypes()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getMixinNodeTypes())
    }

    /**
     * {@inheritDoc}
     */
    public function createNodeTypeTemplate($ntd = null)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->createNodeTypeTemplate($ntd))
    }

    /**
     * {@inheritDoc}
     */
    public function createNodeDefinitionTemplate()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->createNodeDefinitionTemplate())
    }

    /**
     * {@inheritDoc}
     */
    public function createPropertyDefinitionTemplate()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->createPropertyDefinitionTemplate())
    }

    /**
     * {@inheritDoc}
     */
    public function registerNodeType(NodeTypeDefinitionInterface $ntd, $allowUpdate)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->registerNodeType($ntd $allowUpdate))
    }

    /**
     * {@inheritDoc}
     */
    public function registerNodeTypes(array $definitions, $allowUpdate)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->registerNodeTypes($definitions $allowUpdate))
    }

    /**
     * {@inheritDoc}
     */
    public function registerNodeTypesCnd($cnd, $allowUpdate)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->registerNodeTypesCnd($cnd $allowUpdate))
    }

    /**
     * {@inheritDoc}
     */
    public function unregisterNodeType($name)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->unregisterNodeType($name))
    }

    /**
     * {@inheritDoc}
     */
    public function unregisterNodeTypes(array $names)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->unregisterNodeTypes($names))
    }

}