<?php

// autogenerated: Wed, 10 Sep 2014 13:41:17 +0200

namespace Sulu\Component\PhpcrDecorator\PHPCR\NodeType;

use PHPCR\NodeType\NodeTypeDefinitionInterface;

class NodeTypeManager implements \PHPCR\NodeType\NodeTypeManagerInterface
{
    protected $component;
    protected $decoratorFactory;

    public function __construct(
        \PHPCR\NodeType\NodeTypeManagerInterface $component,
        \Sulu\Component\PhpcrDecorator\DecoratorFactoryInterface $decoratorFactory
    )
    {
        $this->component = $component;
        $this->decoratorFactory = $decoratorFactory;
    }

    }

    /**
     * {@inheritDoc}
     */
    public function getPrimaryNodeTypes()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getPrimaryNodeTypes());
    }

    /**
     * {@inheritDoc}
     */
    public function getMixinNodeTypes()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getMixinNodeTypes());
    }

    /**
     * {@inheritDoc}
     */
    public function createNodeTypeTemplate($ntd = null)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->createNodeTypeTemplate($ntd));
    }

    /**
     * {@inheritDoc}
     */
    public function createNodeDefinitionTemplate()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->createNodeDefinitionTemplate());
    }

    /**
     * {@inheritDoc}
     */
    public function createPropertyDefinitionTemplate()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->createPropertyDefinitionTemplate());
    }

    /**
     * {@inheritDoc}
     */
    public function registerNodeType(NodeTypeDefinitionInterface $ntd, $allowUpdate)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->registerNodeType($ntd $allowUpdate));
    }

    /**
     * {@inheritDoc}
     */
    public function registerNodeTypes(array $definitions, $allowUpdate)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->registerNodeTypes($definitions $allowUpdate));
    }

    /**
     * {@inheritDoc}
     */
    public function registerNodeTypesCnd($cnd, $allowUpdate)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->registerNodeTypesCnd($cnd $allowUpdate));
    }

    /**
     * {@inheritDoc}
     */
    public function unregisterNodeType($name)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->unregisterNodeType($name));
    }

    /**
     * {@inheritDoc}
     */
    public function unregisterNodeTypes(array $names)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->unregisterNodeTypes($names));
    }

}