<?php

// autogenerated: Wed, 10 Sep 2014 18:08:53 +0200

namespace Sulu\Component\PhpcrDecorator\PHPCR\NodeType;


class NodeDefinitionTemplate implements \PHPCR\NodeType\NodeDefinitionTemplateInterface
{
    protected $component;
    protected $decoratorFactory;

    public function __construct(
        \PHPCR\NodeType\NodeDefinitionTemplateInterface $component,
        \Sulu\Component\PhpcrDecorator\DecoratorFactoryInterface $decoratorFactory
    )
    {
        $this->component = $component;
        $this->decoratorFactory = $decoratorFactory;
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->setName($name));
    }

    /**
     * {@inheritDoc}
     */
    public function setAutoCreated($autoCreated)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->setAutoCreated($autoCreated));
    }

    /**
     * {@inheritDoc}
     */
    public function setMandatory($mandatory)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->setMandatory($mandatory));
    }

    /**
     * {@inheritDoc}
     */
    public function setOnParentVersion($opv)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->setOnParentVersion($opv));
    }

    /**
     * {@inheritDoc}
     */
    public function setProtected($protectedStatus)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->setProtected($protectedStatus));
    }

    /**
     * {@inheritDoc}
     */
    public function setRequiredPrimaryTypeNames(array $requiredPrimaryTypeNames)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->setRequiredPrimaryTypeNames($requiredPrimaryTypeNames));
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultPrimaryTypeName($defaultPrimaryTypeName)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->setDefaultPrimaryTypeName($defaultPrimaryTypeName));
    }

    /**
     * {@inheritDoc}
     */
    public function setSameNameSiblings($allowSameNameSiblings)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->setSameNameSiblings($allowSameNameSiblings));
    }

    /**
     * {@inheritDoc}
     */
    public function getRequiredPrimaryTypes()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getRequiredPrimaryTypes());
    }

    /**
     * {@inheritDoc}
     */
    public function getRequiredPrimaryTypeNames()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getRequiredPrimaryTypeNames());
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultPrimaryType()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getDefaultPrimaryType());
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultPrimaryTypeName()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getDefaultPrimaryTypeName());
    }

    /**
     * {@inheritDoc}
     */
    public function allowsSameNameSiblings()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->allowsSameNameSiblings());
    }

    /**
     * {@inheritDoc}
     */
    public function getDeclaringNodeType()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getDeclaringNodeType());
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getName());
    }

    /**
     * {@inheritDoc}
     */
    public function isAutoCreated()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->isAutoCreated());
    }

    /**
     * {@inheritDoc}
     */
    public function isMandatory()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->isMandatory());
    }

    /**
     * {@inheritDoc}
     */
    public function getOnParentVersion()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getOnParentVersion());
    }

    /**
     * {@inheritDoc}
     */
    public function isProtected()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->isProtected());
    }

}