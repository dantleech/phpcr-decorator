<?php

// autogenerated: Wed, 10 Sep 2014 13:41:16 +0200

namespace Sulu\Component\PhpcrDecorator\PHPCR\Observation;


class EventFilter implements \PHPCR\Observation\EventFilterInterface
{
    protected $component;
    protected $decoratorFactory;

    public function __construct(
        \PHPCR\Observation\EventFilterInterface $component,
        \Sulu\Component\PhpcrDecorator\DecoratorFactoryInterface $decoratorFactory
    )
    {
        $this->component = $component;
        $this->decoratorFactory = $decoratorFactory;
    }

        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->setAbsPath($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function getAbsPath()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getAbsPath());
    }

    /**
     * {@inheritDoc}
     */
    public function setIsDeep($isDeep)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->setIsDeep($isDeep));
    }

    /**
     * {@inheritDoc}
     */
    public function getIsDeep()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getIsDeep());
    }

    /**
     * {@inheritDoc}
     */
    public function setIdentifiers(array $identifiers)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->setIdentifiers($identifiers));
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentifiers()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getIdentifiers());
    }

    /**
     * {@inheritDoc}
     */
    public function setNodeTypes(array $nodeTypes)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->setNodeTypes($nodeTypes));
    }

    /**
     * {@inheritDoc}
     */
    public function getNodeTypes()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getNodeTypes());
    }

    /**
     * {@inheritDoc}
     */
    public function setNoLocal($noLocal)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->setNoLocal($noLocal));
    }

    /**
     * {@inheritDoc}
     */
    public function getNoLocal()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getNoLocal());
    }

}