<?php

// autogenerated: Wed, 10 Sep 2014 18:08:53 +0200

namespace Sulu\Component\PhpcrDecorator\PHPCR\Observation;


class ObservationManager implements \IteratorAggregate, \PHPCR\Observation\ObservationManagerInterface
{
    protected $component;
    protected $decoratorFactory;

    public function __construct(
        \PHPCR\Observation\ObservationManagerInterface $component,
        \Sulu\Component\PhpcrDecorator\DecoratorFactoryInterface $decoratorFactory
    )
    {
        $this->component = $component;
        $this->decoratorFactory = $decoratorFactory;
    }

    /**
     * {@inheritDoc}
     */
    public function addEventListener(\PHPCR\Observation\EventListenerInterface$listener, \PHPCR\Observation\EventFilterInterface$filter)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->addEventListener($listener, $filter));
    }

    /**
     * {@inheritDoc}
     */
    public function removeEventListener(\PHPCR\Observation\EventListenerInterface$listener)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->removeEventListener($listener));
    }

    /**
     * {@inheritDoc}
     */
    public function getRegisteredEventListeners()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getRegisteredEventListeners());
    }

    /**
     * {@inheritDoc}
     */
    public function setUserData($userData)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->setUserData($userData));
    }

    /**
     * {@inheritDoc}
     */
    public function getEventJournal(\PHPCR\Observation\EventFilterInterface$filter)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getEventJournal($filter));
    }

    /**
     * {@inheritDoc}
     */
    public function createEventFilter()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->createEventFilter());
    }

    public function getIterator()
    {
        throw new \Exception("Iterators not supported on decorated objects (yet)");
    }

}