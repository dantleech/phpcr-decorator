<?php

// autogenerated: Wed, 10 Sep 2014 13:41:16 +0200

namespace Sulu\Component\PhpcrDecorator\PHPCR\Observation;

use PHPCR\Observation\EventListenerInterface;
use PHPCR\Observation\EventFilterInterface;

class ObservationManager implements \PHPCR\Observation\ObservationManagerInterface
{
    protected $component;
    protected $decoratorFactory;

    public function __construct(
        \PHPCR\Observation\ObservationManagerInterface $component,
        \Sulu\Component\PhpcrDecorator\DecoratorFactoryInterface $decoratorFactory
    )
    {
        $this->component = $component;
        $this->decoratorFactory = $decoratorFactory;
    }


    /**
     * {@inheritDoc}
     */
    public function setUserData($userData)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->setUserData($userData));
    }

    /**
     * {@inheritDoc}
     */
    public function getEventJournal(EventFilterInterface $filter)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getEventJournal($filter));
    }

    /**
     * {@inheritDoc}
     */
    public function createEventFilter()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->createEventFilter());
    }

}