<?php

// autogenerated: Wed, 10 Sep 2014 09:56:22 +0200

namespace Sulu\Component\PhpcrDecorator\PHPCR

class Workspace implements \PHPCR\WorkspaceInterface
{
    /**
     * {@inheritDoc}
     */
    public function getSession()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getSession())
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getName())
    }

    /**
     * {@inheritDoc}
     */
    public function copy($srcAbsPath, $destAbsPath, $srcWorkspace = null)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->copy($srcAbsPath $destAbsPath $srcWorkspace))
    }

    /**
     * {@inheritDoc}
     */
    public function cloneFrom($srcWorkspace, $srcAbsPath, $destAbsPath, $removeExisting)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->cloneFrom($srcWorkspace $srcAbsPath $destAbsPath $removeExisting))
    }

    /**
     * {@inheritDoc}
     */
    public function move($srcAbsPath, $destAbsPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->move($srcAbsPath $destAbsPath))
    }

    /**
     * {@inheritDoc}
     */
    public function removeItem($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->removeItem($absPath))
    }

    /**
     * {@inheritDoc}
     */
    public function getLockManager()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getLockManager())
    }

    /**
     * {@inheritDoc}
     */
    public function getQueryManager()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getQueryManager())
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionManager()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getTransactionManager())
    }

    /**
     * {@inheritDoc}
     */
    public function getNamespaceRegistry()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getNamespaceRegistry())
    }

    /**
     * {@inheritDoc}
     */
    public function getNodeTypeManager()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getNodeTypeManager())
    }

    /**
     * {@inheritDoc}
     */
    public function getObservationManager()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getObservationManager())
    }

    /**
     * {@inheritDoc}
     */
    public function getRepositoryManager()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getRepositoryManager())
    }

    /**
     * {@inheritDoc}
     */
    public function getVersionManager()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getVersionManager())
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessibleWorkspaceNames()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getAccessibleWorkspaceNames())
    }

    /**
     * {@inheritDoc}
     */
    public function importXML($parentAbsPath, $uri, $uuidBehavior)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->importXML($parentAbsPath $uri $uuidBehavior))
    }

    /**
     * {@inheritDoc}
     */
    public function createWorkspace($name, $srcWorkspace = null)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->createWorkspace($name $srcWorkspace))
    }

    /**
     * {@inheritDoc}
     */
    public function deleteWorkspace($name)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->deleteWorkspace($name))
    }

}