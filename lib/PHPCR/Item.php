<?php

// autogenerated: Wed, 10 Sep 2014 13:41:17 +0200

namespace Sulu\Component\PhpcrDecorator\PHPCR;

use PHPCR\ItemInterface;
use PHPCR\ItemVisitorInterface;

class Item implements \PHPCR\ItemInterface
{
    protected $component;
    protected $decoratorFactory;

    public function __construct(
        \PHPCR\ItemInterface $component,
        \Sulu\Component\PhpcrDecorator\DecoratorFactoryInterface $decoratorFactory
    )
    {
        $this->component = $component;
        $this->decoratorFactory = $decoratorFactory;
    }


    /**
     * {@inheritDoc}
     */
    public function getParent()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getParent());
    }

    /**
     * {@inheritDoc}
     */
    public function getDepth()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getDepth());
    }

    /**
     * {@inheritDoc}
     */
    public function getSession()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getSession());
    }

    /**
     * {@inheritDoc}
     */
    public function isNode()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->isNode());
    }

    /**
     * {@inheritDoc}
     */
    public function isNew()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->isNew());
    }

    /**
     * {@inheritDoc}
     */
    public function isModified()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->isModified());
    }

    /**
     * {@inheritDoc}
     */
    public function isSame(ItemInterface $otherItem)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->isSame($otherItem));
    }

    /**
     * {@inheritDoc}
     */
    public function accept(ItemVisitorInterface $visitor)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->accept($visitor));
    }

    /**
     * {@inheritDoc}
     */
    public function revert()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->revert());
    }

    /**
     * {@inheritDoc}
     */
    public function remove()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->remove());
    }

}