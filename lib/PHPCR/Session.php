<?php

// autogenerated: Wed, 10 Sep 2014 13:41:17 +0200

namespace Sulu\Component\PhpcrDecorator\PHPCR;

use PHPCR\CredentialsInterface;

class Session implements \PHPCR\SessionInterface
{
    protected $component;
    protected $decoratorFactory;

    public function __construct(
        \PHPCR\SessionInterface $component,
        \Sulu\Component\PhpcrDecorator\DecoratorFactoryInterface $decoratorFactory
    )
    {
        $this->component = $component;
        $this->decoratorFactory = $decoratorFactory;
    }

    }

    /**
     * {@inheritDoc}
     */
    public function getAttribute($name)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getAttribute($name));
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkspace()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getWorkspace());
    }

    /**
     * {@inheritDoc}
     */
    public function getRootNode()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getRootNode());
    }

    /**
     * {@inheritDoc}
     */
    public function impersonate(CredentialsInterface $credentials)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->impersonate($credentials));
    }

    /**
     * {@inheritDoc}
     */
    public function getNodeByIdentifier($id)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getNodeByIdentifier($id));
    }

    /**
     * {@inheritDoc}
     */
    public function getNodesByIdentifier($ids)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getNodesByIdentifier($ids));
    }

    /**
     * {@inheritDoc}
     */
    public function getItem($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getItem($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function getNode($absPath, $depthHint = -1)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getNode($absPath $depthHint));
    }

    /**
     * {@inheritDoc}
     */
    public function getNodes($absPaths)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getNodes($absPaths));
    }

    /**
     * {@inheritDoc}
     */
    public function getProperty($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getProperty($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function getProperties($absPaths)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getProperties($absPaths));
    }

    /**
     * {@inheritDoc}
     */
    public function itemExists($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->itemExists($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function nodeExists($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->nodeExists($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function propertyExists($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->propertyExists($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function move($srcAbsPath, $destAbsPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->move($srcAbsPath $destAbsPath));
    }

    /**
     * {@inheritDoc}
     */
    public function removeItem($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->removeItem($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function save()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->save());
    }

    /**
     * {@inheritDoc}
     */
    public function refresh($keepChanges)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->refresh($keepChanges));
    }

    /**
     * {@inheritDoc}
     */
    public function hasPendingChanges()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->hasPendingChanges());
    }

    /**
     * {@inheritDoc}
     */
    public function hasPermission($absPath, $actions)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->hasPermission($absPath $actions));
    }

    /**
     * {@inheritDoc}
     */
    public function checkPermission($absPath, $actions)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->checkPermission($absPath $actions));
    }

    /**
     * {@inheritDoc}
     */
    public function hasCapability($methodName, $target, array $arguments)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->hasCapability($methodName $target $arguments));
    }

    /**
     * {@inheritDoc}
     */
    public function importXML($parentAbsPath, $uri, $uuidBehavior)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->importXML($parentAbsPath $uri $uuidBehavior));
    }

    /**
     * {@inheritDoc}
     */
    public function exportSystemView($absPath, $stream, $skipBinary, $noRecurse)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->exportSystemView($absPath $stream $skipBinary $noRecurse));
    }

    /**
     * {@inheritDoc}
     */
    public function exportDocumentView($absPath, $stream, $skipBinary, $noRecurse)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->exportDocumentView($absPath $stream $skipBinary $noRecurse));
    }

    /**
     * {@inheritDoc}
     */
    public function setNamespacePrefix($prefix, $uri)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->setNamespacePrefix($prefix $uri));
    }

    /**
     * {@inheritDoc}
     */
    public function getNamespacePrefixes()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getNamespacePrefixes());
    }

    /**
     * {@inheritDoc}
     */
    public function getNamespaceURI($prefix)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getNamespaceURI($prefix));
    }

    /**
     * {@inheritDoc}
     */
    public function getNamespacePrefix($uri)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getNamespacePrefix($uri));
    }

    /**
     * {@inheritDoc}
     */
    public function logout()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->logout());
    }

    /**
     * {@inheritDoc}
     */
    public function isLive()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->isLive());
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessControlManager()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getAccessControlManager());
    }

    /**
     * {@inheritDoc}
     */
    public function getRetentionManager()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getRetentionManager());
    }

}