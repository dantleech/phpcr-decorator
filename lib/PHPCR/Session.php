<?php

// autogenerated: Wed, 10 Sep 2014 18:08:53 +0200

namespace Sulu\Component\PhpcrDecorator\PHPCR;


class Session implements \PHPCR\SessionInterface
{
    protected $component;
    protected $decoratorFactory;

    public function __construct(
        \PHPCR\SessionInterface $component,
        \Sulu\Component\PhpcrDecorator\DecoratorFactoryInterface $decoratorFactory
    )
    {
        $this->component = $component;
        $this->decoratorFactory = $decoratorFactory;
    }

    /**
     * {@inheritDoc}
     */
    public function getRepository()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getRepository());
    }

    /**
     * {@inheritDoc}
     */
    public function getUserID()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getUserID());
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeNames()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getAttributeNames());
    }

    /**
     * {@inheritDoc}
     */
    public function getAttribute($name)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getAttribute($name));
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkspace()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getWorkspace());
    }

    /**
     * {@inheritDoc}
     */
    public function getRootNode()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getRootNode());
    }

    /**
     * {@inheritDoc}
     */
    public function impersonate(\PHPCR\CredentialsInterface$credentials)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->impersonate($credentials));
    }

    /**
     * {@inheritDoc}
     */
    public function getNodeByIdentifier($id)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getNodeByIdentifier($id));
    }

    /**
     * {@inheritDoc}
     */
    public function getNodesByIdentifier($ids)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getNodesByIdentifier($ids));
    }

    /**
     * {@inheritDoc}
     */
    public function getItem($absPath)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getItem($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function getNode($absPath, $depthHint = -1)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getNode($absPath, $depthHint));
    }

    /**
     * {@inheritDoc}
     */
    public function getNodes($absPaths)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getNodes($absPaths));
    }

    /**
     * {@inheritDoc}
     */
    public function getProperty($absPath)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getProperty($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function getProperties($absPaths)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getProperties($absPaths));
    }

    /**
     * {@inheritDoc}
     */
    public function itemExists($absPath)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->itemExists($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function nodeExists($absPath)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->nodeExists($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function propertyExists($absPath)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->propertyExists($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function move($srcAbsPath, $destAbsPath)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->move($srcAbsPath, $destAbsPath));
    }

    /**
     * {@inheritDoc}
     */
    public function removeItem($absPath)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->removeItem($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function save()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->save());
    }

    /**
     * {@inheritDoc}
     */
    public function refresh($keepChanges)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->refresh($keepChanges));
    }

    /**
     * {@inheritDoc}
     */
    public function hasPendingChanges()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->hasPendingChanges());
    }

    /**
     * {@inheritDoc}
     */
    public function hasPermission($absPath, $actions)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->hasPermission($absPath, $actions));
    }

    /**
     * {@inheritDoc}
     */
    public function checkPermission($absPath, $actions)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->checkPermission($absPath, $actions));
    }

    /**
     * {@inheritDoc}
     */
    public function hasCapability($methodName, $target, array $arguments)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->hasCapability($methodName, $target, $arguments));
    }

    /**
     * {@inheritDoc}
     */
    public function importXML($parentAbsPath, $uri, $uuidBehavior)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->importXML($parentAbsPath, $uri, $uuidBehavior));
    }

    /**
     * {@inheritDoc}
     */
    public function exportSystemView($absPath, $stream, $skipBinary, $noRecurse)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->exportSystemView($absPath, $stream, $skipBinary, $noRecurse));
    }

    /**
     * {@inheritDoc}
     */
    public function exportDocumentView($absPath, $stream, $skipBinary, $noRecurse)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->exportDocumentView($absPath, $stream, $skipBinary, $noRecurse));
    }

    /**
     * {@inheritDoc}
     */
    public function setNamespacePrefix($prefix, $uri)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->setNamespacePrefix($prefix, $uri));
    }

    /**
     * {@inheritDoc}
     */
    public function getNamespacePrefixes()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getNamespacePrefixes());
    }

    /**
     * {@inheritDoc}
     */
    public function getNamespaceURI($prefix)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getNamespaceURI($prefix));
    }

    /**
     * {@inheritDoc}
     */
    public function getNamespacePrefix($uri)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getNamespacePrefix($uri));
    }

    /**
     * {@inheritDoc}
     */
    public function logout()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->logout());
    }

    /**
     * {@inheritDoc}
     */
    public function isLive()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->isLive());
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessControlManager()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getAccessControlManager());
    }

    /**
     * {@inheritDoc}
     */
    public function getRetentionManager()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getRetentionManager());
    }

}