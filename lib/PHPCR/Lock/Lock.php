<?php

// autogenerated: Wed, 10 Sep 2014 18:08:53 +0200

namespace Sulu\Component\PhpcrDecorator\PHPCR\Lock;


class Lock implements \PHPCR\Lock\LockInterface
{
    protected $component;
    protected $decoratorFactory;

    public function __construct(
        \PHPCR\Lock\LockInterface $component,
        \Sulu\Component\PhpcrDecorator\DecoratorFactoryInterface $decoratorFactory
    )
    {
        $this->component = $component;
        $this->decoratorFactory = $decoratorFactory;
    }

    /**
     * {@inheritDoc}
     */
    public function getLockOwner()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getLockOwner());
    }

    /**
     * {@inheritDoc}
     */
    public function isDeep()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->isDeep());
    }

    /**
     * {@inheritDoc}
     */
    public function getNode()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getNode());
    }

    /**
     * {@inheritDoc}
     */
    public function getLockToken()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getLockToken());
    }

    /**
     * {@inheritDoc}
     */
    public function getSecondsRemaining()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getSecondsRemaining());
    }

    /**
     * {@inheritDoc}
     */
    public function isLive()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->isLive());
    }

    /**
     * {@inheritDoc}
     */
    public function isSessionScoped()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->isSessionScoped());
    }

    /**
     * {@inheritDoc}
     */
    public function isLockOwningSession()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->isLockOwningSession());
    }

    /**
     * {@inheritDoc}
     */
    public function refresh()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->refresh());
    }

}