<?php

// autogenerated: Wed, 10 Sep 2014 09:56:22 +0200

namespace Sulu\Component\PhpcrDecorator\PHPCR\Lock

class LockManager implements \PHPCR\Lock\LockManagerInterface
{
    /**
     * {@inheritDoc}
     */
    public function addLockToken($lockToken)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->addLockToken($lockToken))
    }

    /**
     * {@inheritDoc}
     */
    public function getLock($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getLock($absPath))
    }

    /**
     * {@inheritDoc}
     */
    public function getLockTokens()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getLockTokens())
    }

    /**
     * {@inheritDoc}
     */
    public function holdsLock($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->holdsLock($absPath))
    }

    /**
     * {@inheritDoc}
     */
    public function lock($absPath, $isDeep, $isSessionScoped, $timeoutHint = PHP_INT_MAX, $ownerInfo = null)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->lock($absPath $isDeep $isSessionScoped $timeoutHint $ownerInfo))
    }

    /**
     * {@inheritDoc}
     */
    public function lockWithInfo($absPath, LockInfoInterface $lockInfo)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->lockWithInfo($absPath $lockInfo))
    }

    /**
     * {@inheritDoc}
     */
    public function isLocked($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->isLocked($absPath))
    }

    /**
     * {@inheritDoc}
     */
    public function removeLockToken($lockToken)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->removeLockToken($lockToken))
    }

    /**
     * {@inheritDoc}
     */
    public function unlock($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->unlock($absPath))
    }

    /**
     * {@inheritDoc}
     */
    public function createLockInfo()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->createLockInfo())
    }

}