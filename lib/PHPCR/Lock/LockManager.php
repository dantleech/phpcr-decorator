<?php

// autogenerated: Wed, 10 Sep 2014 13:41:17 +0200

namespace Sulu\Component\PhpcrDecorator\PHPCR\Lock;

use PHPCR\Lock\LockInfoInterface;

class LockManager implements \PHPCR\Lock\LockManagerInterface
{
    protected $component;
    protected $decoratorFactory;

    public function __construct(
        \PHPCR\Lock\LockManagerInterface $component,
        \Sulu\Component\PhpcrDecorator\DecoratorFactoryInterface $decoratorFactory
    )
    {
        $this->component = $component;
        $this->decoratorFactory = $decoratorFactory;
    }

    }

    /**
     * {@inheritDoc}
     */
    public function holdsLock($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->holdsLock($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function lock($absPath, $isDeep, $isSessionScoped, $timeoutHint = PHP_INT_MAX, $ownerInfo = null)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->lock($absPath $isDeep $isSessionScoped $timeoutHint $ownerInfo));
    }

    /**
     * {@inheritDoc}
     */
    public function lockWithInfo($absPath, LockInfoInterface $lockInfo)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->lockWithInfo($absPath $lockInfo));
    }

    /**
     * {@inheritDoc}
     */
    public function isLocked($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->isLocked($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function removeLockToken($lockToken)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->removeLockToken($lockToken));
    }

    /**
     * {@inheritDoc}
     */
    public function unlock($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->unlock($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function createLockInfo()
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->createLockInfo());
    }

}