<?php

// autogenerated: Wed, 10 Sep 2014 09:56:22 +0200

namespace Sulu\Component\PhpcrDecorator\PHPCR\Security

class AccessControlManager implements \PHPCR\Security\AccessControlManagerInterface
{
    /**
     * {@inheritDoc}
     */
    public function getSupportedPrivileges($absPath = null)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getSupportedPrivileges($absPath))
    }

    /**
     * {@inheritDoc}
     */
    public function privilegeFromName($privilegeName)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->privilegeFromName($privilegeName))
    }

    /**
     * {@inheritDoc}
     */
    public function hasPrivileges($absPath, array $privileges)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->hasPrivileges($absPath $privileges))
    }

    /**
     * {@inheritDoc}
     */
    public function getPrivileges($absPath = null)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getPrivileges($absPath))
    }

    /**
     * {@inheritDoc}
     */
    public function getPolicies($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getPolicies($absPath))
    }

    /**
     * {@inheritDoc}
     */
    public function getEffectivePolicies($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getEffectivePolicies($absPath))
    }

    /**
     * {@inheritDoc}
     */
    public function getApplicablePolicies($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getApplicablePolicies($absPath))
    }

    /**
     * {@inheritDoc}
     */
    public function setPolicy($absPath, AccessControlPolicyInterface $policy)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->setPolicy($absPath $policy))
    }

    /**
     * {@inheritDoc}
     */
    public function removePolicy($absPath, AccessControlPolicyInterface $policy)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->removePolicy($absPath $policy))
    }

}