<?php

// autogenerated: Wed, 10 Sep 2014 13:41:17 +0200

namespace Sulu\Component\PhpcrDecorator\PHPCR\Security;

use PHPCR\Security\AccessControlPolicyInterface;

class AccessControlManager implements \PHPCR\Security\AccessControlManagerInterface
{
    protected $component;
    protected $decoratorFactory;

    public function __construct(
        \PHPCR\Security\AccessControlManagerInterface $component,
        \Sulu\Component\PhpcrDecorator\DecoratorFactoryInterface $decoratorFactory
    )
    {
        $this->component = $component;
        $this->decoratorFactory = $decoratorFactory;
    }

    }

    /**
     * {@inheritDoc}
     */
    public function getPrivileges($absPath = null)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getPrivileges($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function getPolicies($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getPolicies($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function getEffectivePolicies($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getEffectivePolicies($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function getApplicablePolicies($absPath)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->getApplicablePolicies($absPath));
    }

    /**
     * {@inheritDoc}
     */
    public function setPolicy($absPath, AccessControlPolicyInterface $policy)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->setPolicy($absPath $policy));
    }

    /**
     * {@inheritDoc}
     */
    public function removePolicy($absPath, AccessControlPolicyInterface $policy)
    {
        return $this->getDecorator()->decorate(__METHOD__, $this->__component()->removePolicy($absPath $policy));
    }

}