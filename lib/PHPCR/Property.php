<?php

// autogenerated: Wed, 10 Sep 2014 18:08:53 +0200

namespace Sulu\Component\PhpcrDecorator\PHPCR;


class Property implements \IteratorAggregate, \PHPCR\PropertyInterface
{
    protected $component;
    protected $decoratorFactory;

    public function __construct(
        \PHPCR\PropertyInterface $component,
        \Sulu\Component\PhpcrDecorator\DecoratorFactoryInterface $decoratorFactory
    )
    {
        $this->component = $component;
        $this->decoratorFactory = $decoratorFactory;
    }

    /**
     * {@inheritDoc}
     */
    public function setValue($value, $type = NULL)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->setValue($value, $type));
    }

    /**
     * {@inheritDoc}
     */
    public function addValue($value)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->addValue($value));
    }

    /**
     * {@inheritDoc}
     */
    public function getValue()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getValue());
    }

    /**
     * {@inheritDoc}
     */
    public function getString()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getString());
    }

    /**
     * {@inheritDoc}
     */
    public function getBinary()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getBinary());
    }

    /**
     * {@inheritDoc}
     */
    public function getLong()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getLong());
    }

    /**
     * {@inheritDoc}
     */
    public function getDouble()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getDouble());
    }

    /**
     * {@inheritDoc}
     */
    public function getDecimal()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getDecimal());
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getDate());
    }

    /**
     * {@inheritDoc}
     */
    public function getBoolean()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getBoolean());
    }

    /**
     * {@inheritDoc}
     */
    public function getNode()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getNode());
    }

    /**
     * {@inheritDoc}
     */
    public function getProperty()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getProperty());
    }

    /**
     * {@inheritDoc}
     */
    public function getLength()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getLength());
    }

    /**
     * {@inheritDoc}
     */
    public function getDefinition()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getDefinition());
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getType());
    }

    /**
     * {@inheritDoc}
     */
    public function isMultiple()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->isMultiple());
    }

    /**
     * {@inheritDoc}
     */
    public function getPath()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getPath());
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getName());
    }

    /**
     * {@inheritDoc}
     */
    public function getAncestor($depth)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getAncestor($depth));
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getParent());
    }

    /**
     * {@inheritDoc}
     */
    public function getDepth()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getDepth());
    }

    /**
     * {@inheritDoc}
     */
    public function getSession()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getSession());
    }

    /**
     * {@inheritDoc}
     */
    public function isNode()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->isNode());
    }

    /**
     * {@inheritDoc}
     */
    public function isNew()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->isNew());
    }

    /**
     * {@inheritDoc}
     */
    public function isModified()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->isModified());
    }

    /**
     * {@inheritDoc}
     */
    public function isSame(\PHPCR\ItemInterface$otherItem)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->isSame($otherItem));
    }

    /**
     * {@inheritDoc}
     */
    public function accept(\PHPCR\ItemVisitorInterface$visitor)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->accept($visitor));
    }

    /**
     * {@inheritDoc}
     */
    public function revert()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->revert());
    }

    /**
     * {@inheritDoc}
     */
    public function remove()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->remove());
    }

    public function getIterator()
    {
        throw new \Exception("Iterators not supported on decorated objects (yet)");
    }

}