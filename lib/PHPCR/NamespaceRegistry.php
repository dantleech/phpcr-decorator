<?php

// autogenerated: Wed, 10 Sep 2014 18:08:53 +0200

namespace Sulu\Component\PhpcrDecorator\PHPCR;


class NamespaceRegistry implements \IteratorAggregate, \PHPCR\NamespaceRegistryInterface
{
    protected $component;
    protected $decoratorFactory;

    public function __construct(
        \PHPCR\NamespaceRegistryInterface $component,
        \Sulu\Component\PhpcrDecorator\DecoratorFactoryInterface $decoratorFactory
    )
    {
        $this->component = $component;
        $this->decoratorFactory = $decoratorFactory;
    }

    /**
     * {@inheritDoc}
     */
    public function registerNamespace($prefix, $uri)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->registerNamespace($prefix, $uri));
    }

    /**
     * {@inheritDoc}
     */
    public function unregisterNamespaceByURI($uri)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->unregisterNamespaceByURI($uri));
    }

    /**
     * {@inheritDoc}
     */
    public function getNamespaces()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getNamespaces());
    }

    /**
     * {@inheritDoc}
     */
    public function getPrefixes()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getPrefixes());
    }

    /**
     * {@inheritDoc}
     */
    public function getURIs()
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getURIs());
    }

    /**
     * {@inheritDoc}
     */
    public function getURI($prefix)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getURI($prefix));
    }

    /**
     * {@inheritDoc}
     */
    public function getPrefix($uri)
    {
        return $this->decoratorFactory->decorate(__METHOD__, $this->component->getPrefix($uri));
    }

    public function getIterator()
    {
        throw new \Exception("Iterators not supported on decorated objects (yet)");
    }

}